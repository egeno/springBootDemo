<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

	<!-- 设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		classpath:/conf/spring-mybatis.xml
		classpath:/conf/applicationContext-resource.xml
		classpath:/conf/applicationContext-quartz.xml
		</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- Filter 定义 -->
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- Shiro Security filter -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Spring view分发器 -->
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/conf/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<init-param>
			<description> Border around kaptcha. Legal values are yes or no. </description>
			<param-name>kaptcha.border</param-name>
			<param-value>no</param-value>
		</init-param>
		<init-param>
			<description>Color of the border. Legal values are r,g,b (and optional alpha) or white,black,blue. </description>
			<param-name>kaptcha.border.color</param-name>
			<param-value>red</param-value>
		</init-param>
		<init-param>
			<description>Thickness of the border around kaptcha. Legal values are > 0. </description>
			<param-name>kaptcha.border.thickness</param-name>
			<param-value>5</param-value>
		</init-param>
		<init-param>
			<description>Width in pixels of the kaptcha image. </description>
			<param-name>kaptcha.image.width</param-name>
			<param-value>85</param-value>
		</init-param>
		<init-param>
			<description>Height in pixels of the kaptcha image. </description>
			<param-name>kaptcha.image.height</param-name>
			<param-value>35</param-value>
		</init-param>
		<init-param>
			<description>The image producer. </description>
			<param-name>kaptcha.producer.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.DefaultKaptcha </param-value>
		</init-param>
		<init-param>
			<description>The text producer. </description>
			<param-name>kaptcha.textproducer.impl</param-name>
			<param-value>com.google.code.kaptcha.text.impl.DefaultTextCreator</param-value>
		</init-param>
		<init-param>
			<description>The characters that will create the kaptcha. </description>
			<param-name>kaptcha.textproducer.char.string</param-name>
			<param-value>abcde2345678gfynmnpwx </param-value>
		</init-param>
		<init-param>
			<description>The number of characters to display. </description>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>5</param-value>
		</init-param>
		<init-param>
			<description>A list of comma separated font names.</description>
			<param-name>kaptcha.textproducer.font.names</param-name>
			<param-value>Arial, Courier</param-value>
		</init-param>
		<init-param>
			<description>The size of the font to use. </description>
			<param-name>kaptcha.textproducer.font.size</param-name>
			<param-value>23</param-value>
		</init-param>
		<init-param>
			<description>The color to use for the font. Legal values are r,g,b. </description>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<description>The noise producer. </description>
			<param-name>kaptcha.noise.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.NoNoise </param-value>
		</init-param>
		<init-param>
			<description>The noise color. Legal values are r,g,b. </description>
			<param-name>kaptcha.noise.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<description>The obscurificator implementation. </description>
			<param-name>kaptcha.obscurificator.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
		</init-param>
		<init-param>
			<description>The background implementation. </description>
			<param-name>kaptcha.background.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.DefaultBackground</param-value>
		</init-param>
		<init-param>
			<description>Ending background color. Legal values are r,g,b. </description>
			<param-name>kaptcha.background.clear.to</param-name>
			<param-value>white</param-value>
		</init-param>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>kaptcha</servlet-name>
		<url-pattern>/Kaptcha.jpg</url-pattern>
	</servlet-mapping>
	
	<filter>
	    <filter-name>CorsFilter</filter-name>
	    <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
	</filter>
	<filter-mapping>
      	<filter-name>CorsFilter</filter-name>
      	<url-pattern>/*</url-pattern>
	</filter-mapping>

	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
	<listener>
		<listener-class>
			com.qjkj.qjcsp.util.TomcatStartTimeListener
		</listener-class>
	</listener>
</web-app>